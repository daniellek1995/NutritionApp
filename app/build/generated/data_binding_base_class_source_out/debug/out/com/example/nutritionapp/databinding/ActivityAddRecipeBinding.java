// Generated by view binder compiler. Do not edit!
package com.example.nutritionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nutritionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddRecipeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView clickToSelect;

  @NonNull
  public final NestedScrollView recipeCardAdd;

  @NonNull
  public final EditText recipeInsEt;

  @NonNull
  public final ImageView recipeIv;

  @NonNull
  public final EditText recipeNameEt;

  @NonNull
  public final EditText recipeTypeEt;

  @NonNull
  public final Button submitRecipeBtn;

  private ActivityAddRecipeBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView clickToSelect, @NonNull NestedScrollView recipeCardAdd,
      @NonNull EditText recipeInsEt, @NonNull ImageView recipeIv, @NonNull EditText recipeNameEt,
      @NonNull EditText recipeTypeEt, @NonNull Button submitRecipeBtn) {
    this.rootView = rootView;
    this.clickToSelect = clickToSelect;
    this.recipeCardAdd = recipeCardAdd;
    this.recipeInsEt = recipeInsEt;
    this.recipeIv = recipeIv;
    this.recipeNameEt = recipeNameEt;
    this.recipeTypeEt = recipeTypeEt;
    this.submitRecipeBtn = submitRecipeBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddRecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddRecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_recipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddRecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clickToSelect;
      TextView clickToSelect = ViewBindings.findChildViewById(rootView, id);
      if (clickToSelect == null) {
        break missingId;
      }

      id = R.id.recipeCardAdd;
      NestedScrollView recipeCardAdd = ViewBindings.findChildViewById(rootView, id);
      if (recipeCardAdd == null) {
        break missingId;
      }

      id = R.id.recipeInsEt;
      EditText recipeInsEt = ViewBindings.findChildViewById(rootView, id);
      if (recipeInsEt == null) {
        break missingId;
      }

      id = R.id.recipeIv;
      ImageView recipeIv = ViewBindings.findChildViewById(rootView, id);
      if (recipeIv == null) {
        break missingId;
      }

      id = R.id.recipeNameEt;
      EditText recipeNameEt = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameEt == null) {
        break missingId;
      }

      id = R.id.recipeTypeEt;
      EditText recipeTypeEt = ViewBindings.findChildViewById(rootView, id);
      if (recipeTypeEt == null) {
        break missingId;
      }

      id = R.id.submitRecipeBtn;
      Button submitRecipeBtn = ViewBindings.findChildViewById(rootView, id);
      if (submitRecipeBtn == null) {
        break missingId;
      }

      return new ActivityAddRecipeBinding((ConstraintLayout) rootView, clickToSelect, recipeCardAdd,
          recipeInsEt, recipeIv, recipeNameEt, recipeTypeEt, submitRecipeBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
