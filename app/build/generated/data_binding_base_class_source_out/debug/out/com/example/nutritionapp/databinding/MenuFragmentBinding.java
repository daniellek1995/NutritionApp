// Generated by view binder compiler. Do not edit!
package com.example.nutritionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nutritionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MenuFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout MenuList2;

  @NonNull
  public final ListView MenuListView2;

  @NonNull
  public final Button btnStartChat2;

  @NonNull
  public final Toolbar toolBar2;

  private MenuFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout MenuList2, @NonNull ListView MenuListView2,
      @NonNull Button btnStartChat2, @NonNull Toolbar toolBar2) {
    this.rootView = rootView;
    this.MenuList2 = MenuList2;
    this.MenuListView2 = MenuListView2;
    this.btnStartChat2 = btnStartChat2;
    this.toolBar2 = toolBar2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout MenuList2 = (ConstraintLayout) rootView;

      id = R.id.MenuListView2;
      ListView MenuListView2 = ViewBindings.findChildViewById(rootView, id);
      if (MenuListView2 == null) {
        break missingId;
      }

      id = R.id.btnStartChat2;
      Button btnStartChat2 = ViewBindings.findChildViewById(rootView, id);
      if (btnStartChat2 == null) {
        break missingId;
      }

      id = R.id.toolBar2;
      Toolbar toolBar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolBar2 == null) {
        break missingId;
      }

      return new MenuFragmentBinding((ConstraintLayout) rootView, MenuList2, MenuListView2,
          btnStartChat2, toolBar2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
