// Generated by view binder compiler. Do not edit!
package com.example.nutritionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nutritionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSendMsg;

  @NonNull
  public final Button btnSendPic;

  @NonNull
  public final EditText etMsg;

  @NonNull
  public final ListView lvChat;

  @NonNull
  public final TextView tvChatTitle;

  private ActivityChatBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSendMsg,
      @NonNull Button btnSendPic, @NonNull EditText etMsg, @NonNull ListView lvChat,
      @NonNull TextView tvChatTitle) {
    this.rootView = rootView;
    this.btnSendMsg = btnSendMsg;
    this.btnSendPic = btnSendPic;
    this.etMsg = etMsg;
    this.lvChat = lvChat;
    this.tvChatTitle = tvChatTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSendMsg;
      Button btnSendMsg = ViewBindings.findChildViewById(rootView, id);
      if (btnSendMsg == null) {
        break missingId;
      }

      id = R.id.btnSendPic;
      Button btnSendPic = ViewBindings.findChildViewById(rootView, id);
      if (btnSendPic == null) {
        break missingId;
      }

      id = R.id.etMsg;
      EditText etMsg = ViewBindings.findChildViewById(rootView, id);
      if (etMsg == null) {
        break missingId;
      }

      id = R.id.lvChat;
      ListView lvChat = ViewBindings.findChildViewById(rootView, id);
      if (lvChat == null) {
        break missingId;
      }

      id = R.id.tvChatTitle;
      TextView tvChatTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChatTitle == null) {
        break missingId;
      }

      return new ActivityChatBinding((ConstraintLayout) rootView, btnSendMsg, btnSendPic, etMsg,
          lvChat, tvChatTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
