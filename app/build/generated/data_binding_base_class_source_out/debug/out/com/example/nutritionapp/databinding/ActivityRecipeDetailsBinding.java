// Generated by view binder compiler. Do not edit!
package com.example.nutritionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nutritionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButtonRecipeDetails;

  @NonNull
  public final TextView recipeCardHeadline;

  @NonNull
  public final CardView recipeCardInfo;

  @NonNull
  public final ImageView recipeDetailsIv;

  @NonNull
  public final TextView recipeInsTv;

  @NonNull
  public final TextView recipeTypeTv;

  private ActivityRecipeDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button backButtonRecipeDetails, @NonNull TextView recipeCardHeadline,
      @NonNull CardView recipeCardInfo, @NonNull ImageView recipeDetailsIv,
      @NonNull TextView recipeInsTv, @NonNull TextView recipeTypeTv) {
    this.rootView = rootView;
    this.backButtonRecipeDetails = backButtonRecipeDetails;
    this.recipeCardHeadline = recipeCardHeadline;
    this.recipeCardInfo = recipeCardInfo;
    this.recipeDetailsIv = recipeDetailsIv;
    this.recipeInsTv = recipeInsTv;
    this.recipeTypeTv = recipeTypeTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButtonRecipeDetails;
      Button backButtonRecipeDetails = ViewBindings.findChildViewById(rootView, id);
      if (backButtonRecipeDetails == null) {
        break missingId;
      }

      id = R.id.recipeCardHeadline;
      TextView recipeCardHeadline = ViewBindings.findChildViewById(rootView, id);
      if (recipeCardHeadline == null) {
        break missingId;
      }

      id = R.id.recipeCardInfo;
      CardView recipeCardInfo = ViewBindings.findChildViewById(rootView, id);
      if (recipeCardInfo == null) {
        break missingId;
      }

      id = R.id.recipeDetailsIv;
      ImageView recipeDetailsIv = ViewBindings.findChildViewById(rootView, id);
      if (recipeDetailsIv == null) {
        break missingId;
      }

      id = R.id.recipeInsTv;
      TextView recipeInsTv = ViewBindings.findChildViewById(rootView, id);
      if (recipeInsTv == null) {
        break missingId;
      }

      id = R.id.recipeTypeTv;
      TextView recipeTypeTv = ViewBindings.findChildViewById(rootView, id);
      if (recipeTypeTv == null) {
        break missingId;
      }

      return new ActivityRecipeDetailsBinding((ConstraintLayout) rootView, backButtonRecipeDetails,
          recipeCardHeadline, recipeCardInfo, recipeDetailsIv, recipeInsTv, recipeTypeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
